<template>
  <div>
    <el-dialog title="编辑" v-model="editFormVisible" :close-on-click-modal="false">
      <el-form :model="editForm" label-width="80px" :rules="editFormRules" ref="editForm">
        <el-form-item label="关联广告" prop="adId">
          <el-select class="pull-left" :disabled="editForm.adId != ''" v-model="editForm.adId" placeholder="请选择广告" :change="handleSelected(editForm.adId)">
            <el-option
              v-for="item in searchOptions"
              :key="item.id"
              :label="item.name"
              :value="item.id">
            </el-option>
          </el-select>
          <el-input class="search" :disabled="editForm.adId != ''" v-model="editForm.search" type="text" placeholder="请输入关键字"></el-input>
        </el-form-item>
        <div v-if="editForm.adId != ''">
          <el-form-item class="pic-container" label="banner位图片" prop="picURL">
            <el-upload :headers="headers" :data="uploadParams" :action="action" :show-file-list="false" :on-success="handleUploadSuccess">
              <img v-if="previewPic" :src="previewPic" style="width: 120px;">
              <i v-else class="el-icon-plus uploader-icon"></i>
            </el-upload>
            上传图片大小为750*320px
          </el-form-item>
          <el-form-item class="comment-container" label="备注">
            <el-input v-model="editForm.comment" :rows="rows" auto-complete="off" type="textarea" placeholder="请输入该banner位的备注信息"></el-input>
          </el-form-item>
          <div class="clearfix"></div>
          <el-form-item label="上线时间" prop="checked">
            <el-checkbox v-model="editForm.checked">立即上线（默认）</el-checkbox>
          </el-form-item>
          <el-form-item label="下线时间" prop="onlineTaskEnd">
            <el-date-picker
              v-model="editForm.onlineTaskEnd"
              type="datetime"
              placeholder="选择日期时间">
            </el-date-picker>
          </el-form-item>
        </div>
      </el-form>
      <div slot="footer" class="dialog-footer">
        <el-button @click.native="editFormVisible = false">取消</el-button>
        <el-button type="primary" @click.native="editSubmit" :loading="editLoading">提交</el-button>
      </div>
    </el-dialog>
  </div>
</template>
<script>
  import { searMerchantAd } from '../../api/api'
  import bus from '../../assets/js/eventBus'
  export default {
    data () {
      const validateChecked = (rule, value, callback) => {
        value ? callback() : callback(new Error('请勾选立即上线'))
      }
      const validateSelected = (rule, value, callback) => {
        value != '' ? callback() : callback(new Error('请选择关联广告'))
      }
      return {
        // 编辑界面是否显示
        editFormVisible: false,
        editLoading: false,
        // 文本框设置5行
        rows: 5,
        // 编辑界面数据
        editForm: {
          adId: '',
          picURL: '',
          comment: '',
          checked: true,
          search: ''
        },
        editFormRules: {
          adId: [
            {required: true, trigger: 'blur', validator: validateSelected}
          ],
          picURL: [
            {required: true, message: '请上传图片', trigger: 'blur'}
          ],
          checked: [
            {required: true, trigger: 'blur', validator: validateChecked}
          ],
          onlineTaskEnd: [
            {required: true, message: '请设定下线时间', trigger: 'blur'}
          ]
        },
        options: [],
        selectedItem: {},
        headers: { authorization: localStorage.getItem('userId') },
        uploadParams: { cmarketMerchantId: '' },
        action: process.env.API_ROOT + '/cash-market-console-service/console/uploadFile/uploadPicture.do',
        previewPic: ''
      }
    },
    methods: {
      editSubmit () {
        this.$refs.editForm.validate((valid) => {
          if (valid) {
            this.$confirm('确认提交吗？', '提示', {}).then(() => {
              this.editLoading = true
//              if (this.editFormContainer.menuName == this.editForm.menuName && this.editFormContainer.menuUrl == this.editForm.menuUrl && this.editFormContainer.menuIcon == this.editForm.menuIcon && this.editFormContainer.menuOrder == this.editForm.menuOrder && this.editFormContainer.currentStatus == this.currentStatus) {
//                this.editFormVisible = this.editLoading = false
//                this.$refs['editForm'].resetFields()
//                this.$message({
//                  message: '编辑数据不能与原数据相同',
//                  type: 'error'
//                })
//              } else {
//                let menuParams = {
//                  id: this.editForm.id,
//                  menuName: this.editForm.menuName,
//                  menuUrl: this.editForm.menuUrl,
//                  menuIcon: this.editForm.menuIcon,
//                  menuOrder: this.editForm.menuOrder,
//                  menuStatus: this.currentStatus ? 0 : 1
//                }
//                modifyMenu(menuParams).then(data => {
//                  this.editFormVisible = this.editLoading = false
//                  if (data.data.code == 200 && data.data.message.toLowerCase() == 'ok') {
//                    this.$message({
//                      message: '提交成功',
//                      type: 'success'
//                    })
//                    this.editForm.menuStatus = this.editForm.menuStatus == '启用' ? 0 : 1
//                    this.$store.commit('changeMenuInfo', this.editForm)
//                    this.searchMenu({
//                      menuName: this.filters.menuName,
//                      menuStatus: this.filters.value,
//                      startCreatetime: this.startDate,
//                      endCreatetime: this.endDate
//                    })
//                  } else {
//                    this.$message({
//                      message: data.data.message,
//                      type: 'error'
//                    })
//                  }
//                  this.$refs['editForm'].resetFields()
//                })
//              }
            })
          } else {
            console.log('error submit!!')
            return false
          }
        })
      },
      searMerchantAd () {
//        let vm = this
//        let params = {
//          adStatus: 'ON'
//        }
//        searMerchantAd(params).then(data => {
//          if (data.data.code === 200) {
//            vm.options = data.data.data
//          } else {
//            vm.$message({
//              message: data.data.message,
//              type: 'error'
//            })
//          }
//        })
      },
      handleSelected (id) {
        let vm = this
        for (let i = 0; i < vm.options.length; i++) {
          if (vm.options[i].id == id) {
            vm.selectedItem = vm.options[i]
            vm.uploadParams.cmarketMerchantId = vm.options[i].merchantId
            break
          }
        }
      },
      handleUploadSuccess (res, file) {
        if (res.code == 200) {
          this.previewPic = URL.createObjectURL(file.raw)
          this.editForm.picURL = res.data
        } else {
          this.$message({
            message: res.message,
            type: 'error'
          })
        }
      }
    },
    computed: {
      // 任性的自己写个模糊查询
      searchOptions () {
        let vm = this
        let search = vm.editForm.search
        if (search) {
          search = search.toLowerCase()
          let searchData = []
          for (let i = 0; i < vm.options.length; i++) {
            if (vm.options[i].name.toLowerCase().indexOf(search) > -1) {
              searchData.push(vm.options[i])
            }
          }
          return searchData
        } else {
          return vm.options
        }
      }
    },
    mounted () {
      var vm = this
      bus.$on('handleEditBox', function (message) {
        vm.editFormVisible = message
      })
      vm.searMerchantAd()
    },
    watch: {
      editFormVisible (val) {
        if (!val) {
          this.$refs['editForm'].resetFields()
        }
      }
    }
  }
</script>

<style  lang="less" rel="stylesheet/less" scoped>
  .uploader-icon {
    font-size: 28px;
    color: #8c939d;
    width: 120px !important;
    height: 120px !important;
    line-height: 120px !important;
    text-align: center;
    border: 1px dashed #c0ccda;
    background-color: #fbfdff;
  }
  .pic-container {
    float: left;
    width: 232px;
  }

  .comment-container {
    float: left;
    width: 50%;
  }

  .search {
    float: left;
    width: 40%;
    min-width: 160px;
    margin-left: 15px;
  }

  .clearfix {
    *zoom: 1;
    &:before,
    &:after {
      display: table;
      content: "";
      line-height: 0;
    }
    &:after {
       clear: both;
    }
  }
</style>
